// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
// Define the theme object.
$lemon-mart-primary: mat.m2-define-palette(mat.$m2-green-palette, 800);
$lemon-mart-accent: mat.m2-define-palette(mat.$m2-lime-palette, A400);
// $lemon-mart-f-theme: mat.define-theme(
//   (
//     color: (
//       theme-type: light,
//       primary: mat.$azure-palette,
//       tertiary: mat.$blue-palette,
//     ),
//     density: (
//       scale: 0,
//     ),
//   )
// );
$lemon-mart-f-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $lemon-mart-primary,
      accent: $lemon-mart-accent,
    ),
    typography: mat.m2-define-typography-config(),
    density: 0,
  )
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($lemon-mart-f-theme);
@include mat.all-component-typographies($lemon-mart-f-theme);
// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($lemon-mart-f-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($lemon-mart-f-theme);
/* You can add global styles to this file, and also import other style files */
